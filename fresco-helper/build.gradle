apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    // 强制改变所有引用com.android.support版本为rootProject.ext.supportLibVersion
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion rootProject.ext.supportLibVersion
                }
            }
        }
    }

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        rootProject.unifyDependencyVersion(details)
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api 'com.facebook.fresco:fresco:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:animated-base:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:animated-gif:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:webpsupport:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:animated-webp:' + rootProject.ext.frescoVersion
    api 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:' + rootProject.ext.SSIVVersion

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.0'
}

// Maven Group ID
group = "com.facebook.fresco.helper"
// library的版本号，后面每次更新都需要更改这个值
version = rootProject.ext.frescoHelperVersion

// 生成jar包的task
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// 生成jarDoc的task
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding = "UTF-8"
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}

// 生成javaDoc的jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name 'fresco-helper'
            description 'Android上图片加载库Fresco的使用帮助类'
            url 'https://github.com/hpdx/fresco-helper'
            inceptionYear '2016'

            packaging 'aar'
            groupId 'com.facebook.fresco.helper'
            artifactId 'fresco-helper'
            version rootProject.ext.frescoHelperVersion

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            scm {
                connection 'https://github.com/hpdx/fresco-helper.git' // Git仓库地址。
                developerConnection 'https://github.com/hpdx/fresco-helper.git' // Git仓库地址。
                url 'https://github.com/hpdx/fresco-helper' // 项目主页。
            }

            developers {
                developer {
                    id 'android_ls'
                    name 'android_ls'
                    email 'android_ls@163.com'
                }
            }
        }
    }
}

Properties properties = new Properties()
// 读取properties的配置信息
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'fresco-helper'
        userOrg = user
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/hpdx/fresco-helper'
        vcsUrl = 'https://github.com/hpdx/fresco-helper.git'
        publish = true
        publicDownloadNumbers = true
    }
}